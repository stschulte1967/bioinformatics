fn main() {
    println!("Pattern Count: {}",  pattern_count("GCGCG", "GCG"));
    println!("Pattern Count: {}",  pattern_count("GCACTTTTCGCACTTTAAGCACTTTTGCACTTTAAGGCACTTTCGACGCACTTTGGCACTTTGCACTTTACGCACTTTGCACTTTGAGCACTTTGCACTTTTGCGCACTTTGGCACTTTGCACTTTGCACTTTTCTGCACTTTTTCGCACTTTGTAGCACTTTGGCGCACTTTCGACTGCACTTTCGAACCGCACTTTGCACTTTGCACTTTCGAAGCACTTTCAAGAGGCACTTTGGCACTTTTTTTGCTCTTGGCACTTTGGCACTTTGCGCACTTTGGCCCCCAGCACTTTCACGCACTTTTCGCACTTTGCACTTTCGTTGGCGCACTTTTAGTGCACTTTCTTATAGCCCGCGCACTTTTTTCAGCACTTTTTGCACTTTGTGGGCACTTTATGACGCACTTTACTTGCACTTTACCTTTCGGTCTTTGCACTTTTCAGGCACTTTGCACTTTATAGTATTGCACTTTAGGAGCACTTTGCACTTTGCATGGCACTTTGCACTTTTTGCACTTTTGCACTTTGCACTTTCAGGCACTTTGGGCACTTTGCACTTTGCACTTTGCACTTTAGCACTTTAGAAGGCACTTTGCACTTTAGCACTTTGTCAAGCACTTTGGCACTTTTAGCACTTTGCACTTTTTACCCGCACTTTTGCACTTTTGGAGCACTTTAGGCACTTTGCACTTTTAAGCACTTTAAAGCACTTTGGCACTTTGCACTTTCACAGCACTTTAGCACTTTTACGCACTTTGGCCGCACTTTTGCCTGCACTTTTGCAGAGCACTTTTCGCAAAGCACTTTGCCGGCACTTTAAGCACTTTATTTACACGCACTTTCGCACTTTGCCGGCACTTTAGCGCACTTTTTCGCACTTTATGGCACTTTCGCACTTTACGGCTAGCACTTTCTAGCACTTTTCGGCACTTTGATTTGCACTTTGCACTTTGGCACTTTAAGCACTTT", "GCACTTTGC"));
    println!("Pattern Count: {}",  pattern_count("AAACATTTGGGCAAACATTTCTCCGTCTGAACATTTGTAACATTTAGGGAACATTTACAAAACATTTAACATTTAGTACTAACATTTTTACCTCAACATTTTACGACGTTTCCAACATTTAAAAACATTTACAACATTTCCGCTTTTAACATTTACAACATTTAATAACATTTCGAACATTTCAGGGAACGCAACATTTGAGAAACATTTTCAAACATTTGAACATTTAACATTTCAACATTTAACATTTAACATTTCGGCAACATTTTAACATTTAACATTTAAACATTTTGCGAACATTTAAACATTTATTTAAACATTTAACATTTTATTAACATTTAACATTTAAACATTTAACATTTTCCAACATTTTAACATTTAACATTTGAACATTTTAACATTTTACAACATTTCAACATTTAGCAATCCAACATTTAACATTTAACATTTAACATTTGAGGAGCTAAGTAAGGAACATTTGGGAGAACATTTCTGGGATAAACATTTTTAACATTTCAACATTTAACATTTGTAAACATTTAATCCTACAACATTTTAACATTTCGAACATACCGCCGTAACATTTACAAACATTTACAACATTTCGGGCGAGCCATTAACATTTCCCAAACATTTCTAAACATTTAACATTTAACATTTGGTTCAACATTTTGTATAACATTTATCAACATTTAAATTTGGCCCCGCAACATTTCCAGTAAACATTTACTCGTAACATTTGTGCGAACATTTCAACATTTAACATTTAAACATTTAACATTTTAGAACATTTAACATTTGAACATTTGAACATTTCCTCAACATTTAACATTTCACAAACATTTTCGCAACATTTAACATTTTGTAACATTTATAGGGAACATTTTAACATTTTCTGCAACATTTTGAACATTTGTGAACATTTAGGGCAATAAACATTTTCTGAAACATTTCTAACATTTATAACATTTTGAAACATTTAG", "AACATTTAA"));
}

fn pattern_count(text: &str, pattern: &str) -> usize {
    let mut count = 0;
    let pattern_length = pattern.len();
    let text_length = text.len();

    for i in 0..=text_length - pattern_length {
        if &text[i..i + pattern_length] == pattern {
            count += 1;
        }
    }
    count
}
